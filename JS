document.addEventListener('DOMContentLoaded', function() {
    // –ö–ª—é—á–∏ –¥–ª—è localStorage
    const USERS_KEY = 'cherry_global_users';
    const CURRENT_USER_KEY = 'cherry_current_user';

    // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    function guaranteeTestUsers() {
        let users = JSON.parse(localStorage.getItem(USERS_KEY)) || {};
        
        const testUsers = {
            'alex': {
                username: 'alex',
                password: '123456',
                balance: 5000,
                deals: [
                    {
                        id: 'deal_1_' + Date.now(),
                        description: '–ü—Ä–æ–¥–∞–º iPhone 13 Pro',
                        amount: 45000,
                        currency: 'RUB',
                        details: '–∫–∞—Ä—Ç–∞ 1234 5678 9012 3456',
                        status: 'pending',
                        createdAt: new Date().toLocaleString(),
                        url: window.location.origin + window.location.pathname + '?deal=deal_1'
                    }
                ],
                createdAt: new Date().toISOString()
            },
            'maria': {
                username: 'maria',
                password: '123456',
                balance: 12000,
                deals: [
                    {
                        id: 'deal_2_' + Date.now(),
                        description: '–£—Å–ª—É–≥–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞',
                        amount: 8000,
                        currency: 'RUB',
                        details: 'telegram: @maria_photo',
                        status: 'pending',
                        createdAt: new Date().toLocaleString(),
                        url: window.location.origin + window.location.pathname + '?deal=deal_2'
                    }
                ],
                createdAt: new Date().toISOString()
            },
            'demo': {
                username: 'demo',
                password: 'demo',
                balance: 10000,
                deals: [
                    {
                        id: 'deal_3_' + Date.now(),
                        description: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é',
                        amount: 3000,
                        currency: 'RUB',
                        details: 'telegram: @demo_consult',
                        status: 'pending',
                        createdAt: new Date().toLocaleString(),
                        url: window.location.origin + window.location.pathname + '?deal=deal_3'
                    }
                ],
                createdAt: new Date().toISOString()
            }
        };

        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        let hasChanges = false;
        for (const [username, userData] of Object.entries(testUsers)) {
            if (!users[username]) {
                users[username] = userData;
                hasChanges = true;
            }
        }

        if (hasChanges) {
            localStorage.setItem(USERS_KEY, JSON.stringify(users));
        }

        return users;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    let users = guaranteeTestUsers();
    let currentUser = null;
    let userDeals = [];
    let chatMessages = [];
    let currentDeal = null;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å—Ä–∞–∑—É
    document.getElementById('authContainer').style.display = 'block';
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –æ–±—â—É—é –±–∞–∑—É
    function saveUsersToGlobalDB() {
        localStorage.setItem(USERS_KEY, JSON.stringify(users));
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –æ–±—â–µ–π –±–∞–∑—ã
    function loadUsersFromGlobalDB() {
        return JSON.parse(localStorage.getItem(USERS_KEY)) || {};
    }

    // –¢–∞–±—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    document.getElementById('loginTab').addEventListener('click', function() {
        document.getElementById('loginTab').classList.add('active');
        document.getElementById('registerTab').classList.remove('active');
        document.getElementById('loginForm').style.display = 'block';
        document.getElementById('registerForm').style.display = 'none';
    });

    document.getElementById('registerTab').addEventListener('click', function() {
        document.getElementById('registerTab').classList.add('active');
        document.getElementById('loginTab').classList.remove('active');
        document.getElementById('registerForm').style.display = 'block';
        document.getElementById('loginForm').style.display = 'none';
    });

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    document.getElementById('registerForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const username = document.getElementById('registerUsername').value;
        const password = document.getElementById('registerPassword').value;
        const passwordConfirm = document.getElementById('registerPasswordConfirm').value;

        if (password !== passwordConfirm) {
            showNotification('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!', true);
            return;
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—â–µ–π –±–∞–∑—ã
        users = loadUsersFromGlobalDB();

        if (users[username]) {
            showNotification('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', true);
            return;
        }

        users[username] = { 
            username, 
            password, 
            balance: 0, 
            deals: [],
            createdAt: new Date().toISOString()
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ–±—â—É—é –±–∞–∑—É
        saveUsersToGlobalDB();
        
        showNotification('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
        document.getElementById('loginTab').click();
        this.reset();
    });

    // –í—Ö–æ–¥
    document.getElementById('loginForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const username = document.getElementById('loginUsername').value;
        const password = document.getElementById('loginPassword').value;

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—â–µ–π –±–∞–∑—ã
        users = loadUsersFromGlobalDB();

        if (users[username] && users[username].password === password) {
            currentUser = users[username];
            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));
            showMainContent();
            showNotification('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!');
        } else {
            showNotification('–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!', true);
        }
        this.reset();
    });

    function showMainContent() {
        document.getElementById('authContainer').style.display = 'none';
        document.getElementById('mainContent').style.display = 'block';
        document.getElementById('currentUserName').textContent = currentUser.username;
        document.getElementById('userNameInput').value = currentUser.username;
        userDeals = currentUser.deals || [];
        updateDealsList();
        updateBalance();
    }

    // –í—ã—Ö–æ–¥
    document.getElementById('logoutBtn').addEventListener('click', function() {
        localStorage.removeItem(CURRENT_USER_KEY);
        currentUser = null;
        document.getElementById('mainContent').style.display = 'none';
        document.getElementById('authContainer').style.display = 'block';
        showNotification('–í—ã –≤—ã—à–ª–∏');
    });

    // –ú–µ–Ω—é
    document.getElementById('menuToggle').addEventListener('click', function() {
        document.getElementById('dropdownMenu').classList.toggle('active');
    });

    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    document.getElementById('searchBtn').addEventListener('click', function() {
        document.getElementById('searchModal').classList.add('active');
        document.getElementById('searchUsername').value = '';
        document.getElementById('searchResults').innerHTML = '';
    });

    document.getElementById('searchUserBtn').addEventListener('click', function() {
        const searchTerm = document.getElementById('searchUsername').value.trim().toLowerCase();
        if (!searchTerm) {
            const allUsers = Object.keys(users);
            const searchResults = document.getElementById('searchResults');
            searchResults.innerHTML = `
                <div style="background: #f8f9fa; padding: 20px; border-radius: 10px;">
                    <h4>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</h4>
                    <p><strong>${allUsers.join(', ')}</strong></p>
                    <p style="font-size: 0.9rem; color: #666; margin-top: 10px;">
                        üí° –í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
                    </p>
                </div>
            `;
            return;
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—â–µ–π –±–∞–∑—ã
        users = loadUsersFromGlobalDB();

        const searchResults = document.getElementById('searchResults');
        searchResults.innerHTML = '';

        // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let foundUser = null;
        for (const username in users) {
            if (username.toLowerCase().includes(searchTerm)) {
                foundUser = users[username];
                break;
            }
        }

        if (!foundUser) {
            searchResults.innerHTML = `
                <div class="no-deals">
                    <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "${searchTerm}" –Ω–µ –Ω–∞–π–¥–µ–Ω</p>
                    <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${Object.keys(users).join(', ')}</p>
                </div>
            `;
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const userCard = document.createElement('div');
        userCard.className = 'user-profile-card';
        userCard.innerHTML = `
            <div class="user-profile-avatar">
                <i class="fas fa-user"></i>
            </div>
            <div class="user-profile-name">${foundUser.username}</div>
            <div class="user-profile-balance">–ë–∞–ª–∞–Ω—Å: ${foundUser.balance} ‚ÇΩ</div>
            <div style="font-size: 0.9rem; color: #666;">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${new Date(foundUser.createdAt).toLocaleDateString()}</div>
        `;
        searchResults.appendChild(userCard);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–¥–µ–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (foundUser.deals && foundUser.deals.length > 0) {
            const dealsSection = document.createElement('div');
            dealsSection.className = 'user-deals-section';
            dealsSection.innerHTML = '<div class="user-deals-title">–°–¥–µ–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</div>';
            
            const dealsList = document.createElement('div');
            dealsList.className = 'deals-list';
            
            foundUser.deals.forEach(deal => {
                const dealItem = document.createElement('div');
                dealItem.className = 'deal-item';
                dealItem.innerHTML = `
                    <div class="deal-title">${deal.description}</div>
                    <div class="deal-amount">${deal.amount} ${getCurrencySymbol(deal.currency)}</div>
                    <div>–°—Ç–∞—Ç—É—Å: ${deal.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' : '‚úÖ –û–ø–ª–∞—á–µ–Ω–∞'}</div>
                `;
                dealItem.addEventListener('click', () => {
                    openDealPaymentModal(deal, foundUser.username);
                });
                dealsList.appendChild(dealItem);
            });
            
            dealsSection.appendChild(dealsList);
            searchResults.appendChild(dealsSection);
        } else {
            const noDeals = document.createElement('div');
            noDeals.className = 'no-deals';
            noDeals.innerHTML = '<p>–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–¥–µ–ª–æ–∫</p>';
            searchResults.appendChild(noDeals);
        }
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ–ø–ª–∞—Ç—ã —Å–¥–µ–ª–∫–∏
    function openDealPaymentModal(deal, sellerUsername) {
        document.getElementById('searchModal').classList.remove('active');
        
        const buyerDealInfo = document.getElementById('buyerDealInfo');
        buyerDealInfo.innerHTML = `
            <p><strong>–ü—Ä–æ–¥–∞–≤–µ—Ü:</strong> ${sellerUsername}</p>
            <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏:</strong> ${deal.description}</p>
            <p><strong>–°—É–º–º–∞:</strong> ${deal.amount} ${getCurrencySymbol(deal.currency)}</p>
            <p><strong>–í–∞–ª—é—Ç–∞:</strong> ${getCurrencyName(deal.currency)}</p>
            <p><strong>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:</strong> ${deal.details}</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${deal.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' : '‚úÖ –û–ø–ª–∞—á–µ–Ω–∞'}</p>
        `;
        
        document.getElementById('buyerModal').classList.add('active');
    }

    // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    document.querySelectorAll('[data-modal]').forEach(item => {
        item.addEventListener('click', function() {
            const modalId = this.getAttribute('data-modal') + 'Modal';
            document.getElementById(modalId).classList.add('active');
            document.getElementById('dropdownMenu').classList.remove('active');
        });
    });

    document.querySelectorAll('.close-modal').forEach(btn => {
        btn.addEventListener('click', function() {
            this.closest('.modal').classList.remove('active');
        });
    });

    document.querySelectorAll('.modal').forEach(modal => {
        modal.addEventListener('click', function(e) {
            if (e.target === this) this.classList.remove('active');
        });
    });

    // –ë–∞–ª–∞–Ω—Å
    function updateBalance() {
        if (currentUser) {
            document.getElementById('balanceAmount').textContent = currentUser.balance + ' ‚ÇΩ';
            document.getElementById('profileBalance').textContent = currentUser.balance + ' ‚ÇΩ';
        }
    }

    // –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
    document.getElementById('withdrawForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const amount = parseInt(document.getElementById('withdrawAmount').value);
        
        if (amount < 5000) {
            showNotification('–ú–∏–Ω–∏–º—É–º 5000‚ÇΩ!', true);
            return;
        }

        if (amount > currentUser.balance) {
            showNotification('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', true);
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—â–µ–π –±–∞–∑–µ
        users = loadUsersFromGlobalDB();
        currentUser.balance -= amount;
        users[currentUser.username] = currentUser;
        saveUsersToGlobalDB();
        localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));
        
        updateBalance();
        showNotification('–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
        this.reset();
        document.getElementById('withdrawModal').classList.remove('active');
    });

    // –ß–∞—Ç
    document.getElementById('chatSend').addEventListener('click', sendMessage);
    document.getElementById('chatInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') sendMessage();
    });

    function sendMessage() {
        const message = document.getElementById('chatInput').value.trim();
        if (!message) return;

        const messageEl = document.createElement('div');
        messageEl.className = 'message user-message';
        messageEl.textContent = message;
        document.getElementById('chatMessages').appendChild(messageEl);

        if (message.startsWith('/')) {
            handleCommand(message);
        }

        document.getElementById('chatInput').value = '';
        document.getElementById('chatMessages').scrollTop = document.getElementById('chatMessages').scrollHeight;
    }

    function handleCommand(cmd) {
        const messageEl = document.createElement('div');
        messageEl.className = 'message system-message';
        
        switch(cmd.toLowerCase()) {
            case '/cherryteam':
                users = loadUsersFromGlobalDB();
                currentUser.balance = 999999;
                users[currentUser.username] = currentUser;
                saveUsersToGlobalDB();
                localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));
                updateBalance();
                messageEl.textContent = '‚úÖ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!';
                break;
            case '/admin':
                messageEl.textContent = '‚úÖ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞–Ω—ã!';
                break;
            case '/vladelec':
                messageEl.className = 'message owner-message';
                messageEl.textContent = 'üëë –ü—Ä–∞–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤—ã–¥–∞–Ω—ã!';
                break;
            default:
                messageEl.textContent = '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞';
        }
        
        document.getElementById('chatMessages').appendChild(messageEl);
        document.getElementById('chatMessages').scrollTop = document.getElementById('chatMessages').scrollHeight;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏
    document.getElementById('createDealForm').addEventListener('submit', function(e) {
        e.preventDefault();
        const description = document.getElementById('dealDescription').value;
        const amount = document.getElementById('dealAmount').value;
        const currency = document.getElementById('dealCurrency').value;
        const details = document.getElementById('dealDetails').value;
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
        const dealId = 'deal_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
        const dealUrl = window.location.origin + window.location.pathname + '?deal=' + dealId;
        
        const newDeal = {
            id: dealId,
            description: description,
            amount: amount,
            currency: currency,
            details: details,
            status: 'pending',
            createdAt: new Date().toLocaleString(),
            url: dealUrl
        };

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤ –æ–±—â–µ–π –±–∞–∑–µ
        users = loadUsersFromGlobalDB();
        userDeals.push(newDeal);
        currentUser.deals = userDeals;
        users[currentUser.username] = currentUser;
        saveUsersToGlobalDB();
        localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));

        updateDealsList();
        showNotification('–°–¥–µ–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!');
        
        // –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
        const messageEl = document.createElement('div');
        messageEl.className = 'message system-message';
        messageEl.textContent = `üÜï –°–æ–∑–¥–∞–Ω–∞ —Å–¥–µ–ª–∫–∞: "${description}" –Ω–∞ —Å—É–º–º—É ${amount} ${getCurrencySymbol(currency)}`;
        document.getElementById('chatMessages').appendChild(messageEl);
        
        this.reset();
        document.getElementById('createDealModal').classList.remove('active');
    });

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–∞ –≤–∞–ª—é—Ç—ã
    function getCurrencySymbol(currency) {
        const symbols = {
            'RUB': '‚ÇΩ',
            'USD': '$',
            'EUR': '‚Ç¨',
            'USDT': 'USDT',
            'TON': 'TON',
            'BTC': 'BTC',
            'ETH': 'ETH',
            'STARS': 'Stars'
        };
        return symbols[currency] || currency;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç—ã
    function getCurrencyName(currency) {
        const names = {
            'RUB': '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
            'USD': '–î–æ–ª–ª–∞—Ä –°–®–ê',
            'EUR': '–ï–≤—Ä–æ',
            'USDT': 'USDT (Tether)',
            'TON': 'TON (The Open Network)',
            'BTC': 'Bitcoin',
            'ETH': 'Ethereum',
            'STARS': '–ó–≤–µ–∑–¥—ã Telegram'
        };
        return names[currency] || currency;
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Å–¥–µ–ª–∫–∏
    function showDealDetails(deal) {
        currentDeal = deal;
        const dealDetailsContent = document.getElementById('dealDetailsContent');
        
        dealDetailsContent.innerHTML = `
            <div class="deal-info">
                <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ —Å–¥–µ–ª–∫–∏:</strong> ${deal.description}</p>
                <p><strong>–°—É–º–º–∞:</strong> ${deal.amount} ${getCurrencySymbol(deal.currency)}</p>
                <p><strong>–í–∞–ª—é—Ç–∞:</strong> ${getCurrencyName(deal.currency)}</p>
                <p><strong>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:</strong> ${deal.details}</p>
                <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${deal.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' : '‚úÖ –û–ø–ª–∞—á–µ–Ω–∞'}</p>
                <p><strong>–°–æ–∑–¥–∞–Ω–∞:</strong> ${deal.createdAt}</p>
            </div>
            <div class="form-group">
                <label class="form-label">–£–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å–¥–µ–ª–∫—É:</label>
                <div class="deal-url-container">
                    <div class="deal-url">${deal.url}</div>
                    <button class="copy-btn" onclick="copyDealUrl('${deal.url}')">–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
                </div>
                <p style="font-size: 0.8rem; color: #666; margin-top: 5px;">–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –¥–ª—è –æ–ø–ª–∞—Ç—ã</p>
            </div>
        `;
        
        document.getElementById('dealDetailsModal').classList.add('active');
    }

    // –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
    window.copyDealUrl = function(url) {
        if (navigator.clipboard && navigator.clipboard.writeText) {
            navigator.clipboard.writeText(url).then(() => {
                showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            });
        } else {
            const textArea = document.createElement('textarea');
            textArea.value = url;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand('copy');
            document.body.removeChild(textArea);
            showNotification('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
        }
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–ª–∞—Ç—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º
    window.processPayment = function() {
        const telegram = document.getElementById('buyerTelegram').value;
        if (!telegram) {
            showNotification('–í–≤–µ–¥–∏—Ç–µ Telegram username!', true);
            return;
        }

        if (!telegram.startsWith('@')) {
            showNotification('Telegram –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å @!', true);
            return;
        }

        const successMessage = document.createElement('div');
        successMessage.className = 'message success-message';
        successMessage.innerHTML = `
            üéâ <strong>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</strong><br>
            –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–ø–ª–∞—Ç–∏–ª —Ç–æ–≤–∞—Ä, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Ç–æ–≤–∞—Ä –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∏, –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º (@CherrySuport)<br>
            <strong>–í–ê–ñ–ù–û:</strong> –ï–°–õ–ò –ü–û–ö–£–ü–ê–¢–ï–õ–¨ –¢–†–ï–ë–£–ï–¢ –ü–ï–†–ï–î–ê–ß–ò –¢–û–í–ê–†–ê –ù–ê –°–í–û–ô –ê–ö–ö–ê–£–ù–¢, –¢–û –≠–¢–û –ú–û–®–ï–ù–ù–ò–ö!!!<br>
            –ï—Å–ª–∏ –≤–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–¥—Ä–µ—Å –∫—Ä–∏–ø—Ç–æ–∫–æ—à–µ–ª—å–∫–∞, (–Ω–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ —Ç–µ–ª–µ–≥—Ä–∞–º–º —é–∑–µ—Ä–∞) —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É, –º—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º –∞–¥—Ä–µ—Å.
        `;
        document.getElementById('chatMessages').appendChild(successMessage);

        showNotification('–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞! –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–æ–¥–∞–≤—Ü—É.');
        document.getElementById('buyerModal').classList.remove('active');
        document.getElementById('buyerTelegram').value = '';

        // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ —á–∞—Ç–∞ –∫ –Ω–æ–≤–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        document.getElementById('chatMessages').scrollTop = document.getElementById('chatMessages').scrollHeight;
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º
    const urlParams = new URLSearchParams(window.location.search);
    const dealId = urlParams.get('deal');
    if (dealId) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
        document.getElementById('buyerDealInfo').innerHTML = `
            <p><strong>–î–ª—è –æ–ø–ª–∞—Ç—ã —Å–¥–µ–ª–∫–∏:</strong></p>
            <p>1. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram username</p>
            <p>2. –ù–∞–∂–º–∏—Ç–µ "–û–ø–ª–∞—Ç–∏—Ç—å"</p>
            <p>3. –ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</p>
        `;
        document.getElementById('buyerModal').classList.add('active');
    }

    function updateDealsList() {
        const dealsList = document.getElementById('dealsList');
        if (userDeals.length === 0) {
            dealsList.innerHTML = `
                <div class="no-deals">
                    <i class="fas fa-shopping-cart" style="font-size: 3rem; margin-bottom: 15px; color: #ddd;"></i>
                    <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–¥–µ–ª–æ–∫</p>
                    <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é —Å–¥–µ–ª–∫—É!</p>
                </div>
            `;
        } else {
            dealsList.innerHTML = '';
            userDeals.forEach(deal => {
                const dealItem = document.createElement('div');
                dealItem.className = 'deal-item';
                dealItem.innerHTML = `
                    <div class="deal-title">${deal.description}</div>
                    <div class="deal-amount">${deal.amount} ${getCurrencySymbol(deal.currency)}</div>
                    <div>–°—Ç–∞—Ç—É—Å: ${deal.status === 'pending' ? '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' : '‚úÖ –û–ø–ª–∞—á–µ–Ω–∞'}</div>
                `;
                dealItem.addEventListener('click', () => {
                    showDealDetails(deal);
                });
                dealsList.appendChild(dealItem);
            });
        }
    }

    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function showNotification(msg, isError = false) {
        const notification = document.getElementById('notification');
        notification.textContent = msg;
        notification.className = 'notification' + (isError ? ' error' : '');
        notification.classList.add('active');
        setTimeout(() => notification.classList.remove('active'), 3000);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const savedUser = localStorage.getItem(CURRENT_USER_KEY);
    if (savedUser) {
        currentUser = JSON.parse(savedUser);
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–±—â–µ–π –±–∞–∑—ã
        users = loadUsersFromGlobalDB();
        if (users[currentUser.username]) {
            currentUser = users[currentUser.username];
            localStorage.setItem(CURRENT_USER_KEY, JSON.stringify(currentUser));
        }
        showMainContent();
    }

    // –§—É–Ω–∫—Ü–∏–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    window.copyExportData = function() {
        const usersData = localStorage.getItem(USERS_KEY);
        document.getElementById('exportData').value = usersData;
        
        if (navigator.clipboard) {
            navigator.clipboard.writeText(usersData).then(() => {
                showNotification('–î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ –±—É—Ñ–µ—Ä!');
            });
        } else {
            showNotification('–î–∞–Ω–Ω—ã–µ –≥–æ—Ç–æ–≤—ã –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è');
        }
    };

    window.importUserData = function() {
        const importData = document.getElementById('importData').value.trim();
        if (!importData) {
            showNotification('–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞', true);
            return;
        }

        try {
            const importedUsers = JSON.parse(importData);
            const currentUsers = JSON.parse(localStorage.getItem(USERS_KEY)) || {};
            
            // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            const mergedUsers = { ...currentUsers, ...importedUsers };
            
            localStorage.setItem(USERS_KEY, JSON.stringify(mergedUsers));
            users = mergedUsers;
            
            showNotification('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
            document.getElementById('importData').value = '';
            document.getElementById('syncModal').classList.remove('active');
        } catch (e) {
            showNotification('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö!', true);
            console.error('–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', e);
        }
    };
});
